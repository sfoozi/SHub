local a=workspace.CurrentCamera local b=game:GetService("Players") local c=game:GetService("RunService") local d=game:GetService("UserInputService") local e=game:GetService("TweenService") local f=b.LocalPlayer local g={enabled=true,teamCheck=true,skeletonColor=Color3.new(0.5,0,1),boxColor=Color3.new(1,0,0),tracerColor=Color3.new(1,0,0),nameColor=Color3.new(1,1,1),aimbotEnabled=false,aimPart="Head",sensitivity=0.2,fov=100,showFOV=true,maxDistance=500,smoothness=0.1,bulletSpeed=700,prediction=true,lockOnKey=Enum.KeyCode.Z,speedBoostKey=Enum.KeyCode.V,speedMultiplier=2,lockOnTarget=nil} local h={} local i=false local j=16 local k={} local l=Drawing.new("Circle") l.Visible=g.showFOV l.Radius=g.fov l.Color=Color3.new(1,1,1) l.Thickness=1 l.Position=Vector2.new(a.ViewportSize.X/2,a.ViewportSize.Y/2) function m(n) if not g.teamCheck then return true end if not f.Team or not n.Team then return true end return f.Team~=n.Team end function o(n) if not g.enabled then return end if not m(n) then return end if n==f then return end local p=n.Character or n.CharacterAdded:Wait() local q=p:WaitForChild("HumanoidRootPart") local r=(q.Position-a.CFrame.Position).Magnitude if r>g.maxDistance then return end local s=Drawing.new("Square") s.Color=g.boxColor s.Thickness=2 s.Transparency=1 s.Filled=false local t=Drawing.new("Line") t.Color=g.tracerColor t.Thickness=1 t.Transparency=1 local u=Drawing.new("Text") u.Text=n.Name u.Color=g.nameColor u.Size=20 u.Center=true u.Outline=true u.Transparency=1 local v={} for _,w in pairs({"Head","LeftUpperArm","RightUpperArm","LeftUpperLeg","RightUpperLeg"})do v[w]=Drawing.new("Line") v[w].Color=g.skeletonColor v[w].Thickness=2 v[w].Transparency=1 end h[n]={box=s,tracer=t,name=u,skeleton=v} local x=false local y y=c.RenderStepped:Connect(function() if not n.Character or not n.Character:FindFirstChild("HumanoidRootPart")then s.Visible=false t.Visible=false u.Visible=false for _,z in pairs(v)do z.Visible=false end return end local A,B=a:WorldToViewportPoint(q.Position) if B then local C=n.Character:FindFirstChild("Head") local D=n.Character:FindFirstChild("LeftUpperArm") local E=n.Character:FindFirstChild("RightUpperArm") local F=n.Character:FindFirstChild("LeftUpperLeg") local G=n.Character:FindFirstChild("RightUpperLeg") if C and D and E and F and G then local H=a:WorldToViewportPoint(C.Position) local I=a:WorldToViewportPoint(D.Position) local J=a:WorldToViewportPoint(E.Position) local K=a:WorldToViewportPoint(F.Position) local L=a:WorldToViewportPoint(G.Position) local M=math.min(H.X,I.X,J.X,K.X,L.X) local N=math.max(H.X,I.X,J.X,K.X,L.X) local O=math.min(H.Y,I.Y,J.Y,K.Y,L.Y) local P=math.max(H.Y,I.Y,J.Y,K.Y,L.Y) local Q=N-M local R=P-O s.Size=Vector2.new(Q,R) s.Position=Vector2.new(M,O) t.From=Vector2.new(a.ViewportSize.X/2,a.ViewportSize.Y) t.To=Vector2.new(A.X,A.Y) u.Position=Vector2.new(M+Q/2,O-20) v.Head.From=Vector2.new(H.X,H.Y) v.Head.To=Vector2.new(A.X,A.Y) v.LeftUpperArm.From=Vector2.new(I.X,I.Y) v.LeftUpperArm.To=Vector2.new(A.X,A.Y) v.RightUpperArm.From=Vector2.new(J.X,J.Y) v.RightUpperArm.To=Vector2.new(A.X,A.Y) v.LeftUpperLeg.From=Vector2.new(K.X,K.Y) v.LeftUpperLeg.To=Vector2.new(A.X,A.Y) v.RightUpperLeg.From=Vector2.new(L.X,L.Y) v.RightUpperLeg.To=Vector2.new(A.X,A.Y) end if not x then s.Visible=true t.Visible=true u.Visible=true for _,z in pairs(v)do z.Visible=true end x=true end else if x then s.Visible=false t.Visible=false u.Visible=false for _,z in pairs(v)do z.Visible=false end x=false end end end) h[n].connection=y end function S(n) if h[n]then if h[n].connection then h[n].connection:Disconnect() end h[n].box:Remove() h[n].tracer:Remove() h[n].name:Remove() for _,z in pairs(h[n].skeleton)do z:Remove() end h[n]=nil end end function T(n) n.CharacterAdded:Connect(function(p) o(n) end) n.CharacterRemoving:Connect(function(p) S(n) end) n:GetPropertyChangedSignal("Team"):Connect(function() if not m(n)then S(n) else o(n) end end) if n.Character then o(n) end end function U(n) if not n.Character then return Vector3.new() end local q=n.Character:FindFirstChild("HumanoidRootPart") if not q then return Vector3.new() end k[n]=k[n]or{} table.insert(k[n],{position=q.Position,time=tick()}) while#k[n]>5 do table.remove(k[n],1) end if#k[n]>=2 then local V=k[n][1] local W=k[n][#k[n]] local X=W.time-V.time if X>0 then return(W.position-V.position)/X end end return q.Velocity end function Y() if g.lockOnTarget and g.lockOnTarget.Character and g.lockOnTarget.Character:FindFirstChild(g.aimPart)then local Z=g.lockOnTarget.Character[g.aimPart].Position local _=a:WorldToScreenPoint(Z) local a0=d:GetMouseLocation() local a1=(Vector2.new(a0.X,a0.Y)-Vector2.new(_.X,_.Y)).Magnitude if a1<=g.fov then return g.lockOnTarget end end local a2=nil local a3=math.huge local a4=d:GetMouseLocation() local a5=a.CFrame.Position for _,n in pairs(b:GetPlayers())do if n~=f and m(n)then if n.Character and n.Character:FindFirstChild(g.aimPart)then local Z=n.Character[g.aimPart].Position local r=(Z-a5).Magnitude if r<=g.maxDistance then local _=a:WorldToScreenPoint(Z) if _ then local a1=(Vector2.new(a4.X,a4.Y)-Vector2.new(_.X,_.Y)).Magnitude if a1<=g.fov then if a1<a3 then a3=a1 a2=n end end end end end end end g.lockOnTarget=a2 return a2 end local function a6() if not f.Character then return end local a7=f.Character:FindFirstChildOfClass("Humanoid") if not a7 then return end i=not i if i then j=a7.WalkSpeed a7.WalkSpeed=j*g.speedMultiplier else a7.WalkSpeed=j end end d.InputBegan:Connect(function(a8) if a8.KeyCode==g.lockOnKey then g.aimbotEnabled=not g.aimbotEnabled if not g.aimbotEnabled then g.lockOnTarget=nil end elseif a8.KeyCode==g.speedBoostKey then a6() end end) f.CharacterAdded:Connect(function(p) p:WaitForChild("Humanoid") if i then local a7=p:FindFirstChildOfClass("Humanoid") if a7 then a7.WalkSpeed=j*g.speedMultiplier end end end) b.PlayerAdded:Connect(T) for _,n in pairs(b:GetPlayers())do T(n) end b.PlayerRemoving:Connect(function(n) S(n) if g.lockOnTarget==n then g.lockOnTarget=nil end end) c.RenderStepped:Connect(function() l.Position=Vector2.new(a.ViewportSize.X/2,a.ViewportSize.Y/2) l.Radius=g.fov l.Visible=g.showFOV if g.aimbotEnabled then local a9=Y() if a9 and a9.Character and a9.Character:FindFirstChild(g.aimPart)then local Z=a9.Character[g.aimPart].Position local r=(Z-a.CFrame.Position).Magnitude if g.prediction then local aa=U(a9) local ab=r/g.bulletSpeed Z=Z+(aa*ab) end if g.smoothness>0 then local ac=CFrame.new(a.CFrame.Position,Z) a.CFrame=a.CFrame:Lerp(ac,1-g.smoothness) else a.CFrame=CFrame.new(a.CFrame.Position,Z) end end end end)